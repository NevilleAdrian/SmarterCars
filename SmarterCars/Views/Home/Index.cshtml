@using Microsoft.AspNetCore.Identity
@model SmarterCars.ViewModels.HomeViewModel

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
	ViewData["Title"] = "Home Page";
	string userId = null;
	if (SignInManager.IsSignedIn(User))
	{ userId = UserManager.GetUserId(User); }
}

<div class="row">
	<div class="col-md-6">
		@if (Model.Contents != null && Model.Contents.Count() > 0)
		{
			@foreach (var item in Model.Contents.Take(5))
			{
				<a asp-area="" asp-action="Details" asp-controller="Contents" asp-route-id="@item.ContentId" class="no-link-behaviour row">
					<div class="col-md-3">
						<img src="~/@item.ImagePath" alt="@item.Title" class="card-img-overlay w-100" />
					</div>
					<div class="col-md-9">
						<h2 class="col-md-12">@item.Title</h2>
						<div class="col-md-12">
							<p>Posted: @item.DatePosted.ToString() <br/> No of Comments: @item.Comments.Count().ToString()</p>
							<p>@item.ShortDescription</p>

						</div>
					</div>
				</a>
			}

		}
	</div>
	<div class="col-md-6">
		@if (Model.CarHomeViews != null && Model.CarHomeViews.Count() > 0)
		{
			@foreach (var item in Model.CarHomeViews.Take(5))
			{
				<div class="col-md-12">
					<p>@item.ModelNumber</p>

					@if (item.CarImages != null && item.CarImages.Count() > 0)
					{
						@if (item.CarImages.Count() == 1)
						{
						<div class="col-md-12">
							<figure>
								<img src="~/@item.CarImages.FirstOrDefault().CarImagePath" class="fixed-height-car-image w-100 img-fluid" alt="@item.CarImages.FirstOrDefault().View" />
								<figcaption>
									<h4>@item.CarImages.FirstOrDefault().Description</h4>
									<h5>@item.CarImages.FirstOrDefault().View</h5>
								</figcaption>
							</figure>
						</div>
						}
						else
						{
						<div id="carouselImages" class="carousel slide" data-ride="carousel">
							<div class="carousel-inner">
								@foreach (var image in item.CarImages)
								{
									<div class="carousel-item @(item.CarImages.IndexOf(image) == 0 ? "active": "") ">
										<div class="dark-overlay"></div>
										<img class="w-100 img-fluid fixed-height-car-image" src="~/@image.CarImagePath" alt="@image.View" />
										<div class="carousel-caption d-none d-md-block">
											<h4>@image.Description</h4>
											<h5>@image.View</h5>
										</div>
									</div>
								}
							</div>
						</div>
						}

					}
					@Html.AntiForgeryToken()
					<div class="appointment-area">
					</div>
					@if (SignInManager.IsSignedIn(User))
					{
						@if (item.CustomerScheduleDtos != null)
						{
							var uD = item.CustomerScheduleDtos.Where(cS => cS.UserId == userId && cS.State == SmarterCars.Enums.InspectionState.WillInspect).SingleOrDefault();

							@if (uD != null)
							{
								<div class="col-md-12 announcer-of-appointment">
									<span class="btn btn-outline-info">You already booked an inspection for @uD.ScheduledTime.ToLongDateString() at @uD.ScheduledTime.ToLongTimeString()</span>
									<div class="form-group">
										<a class="btn btn-info" asp-route-id="@uD.CustomerScheduleId" asp-action="Edit" asp-controller="CustomerSchedules">Edit your inspection</a>
										<button class="btn btn-danger" onclick="cancelInspection(this, @uD.CustomerScheduleId)">Cancel your inspection</button>
									</div>
								</div>

							}
							else
							{
								<button class="booker btn btn-dark" onclick="showBooking(this, @item.CarId)">Schedule Inspection</button>

							}
						}

					}
					else
					{
						<button class="booker btn btn-dark" onclick="showBooking(this, @item.CarId)">Schedule Inspection</button>

					}
				</div>
			}

		}

	</div>
</div>


@section Scripts{
	<script>
		function showBooking(elem, id) {
			let thisButton = elem;
			let bookingArea = thisButton.previousElementSibling;

			let container = createElement('div', 'remove', null, null, null);



			let appUser = '@(userId != null ? userId: "")';

			let dateArea = createElement('input', 'bookable form-control', 'ScheduledTime', 'datetime-local', null);

			let appUserInput = createElement('input', 'bookable form-control', 'UserId', 'hidden', null);
			appUserInput.setAttribute('value', appUser);

			let carInput = createElement('input', 'bookable form-control', 'CarId', 'hidden', null);
			carInput.setAttribute('value', id);

			let booking = createElement('input', 'btn btn-default', null, 'button');
			booking.setAttribute('value', "Book Inspection");
			booking.setAttribute('onclick', "bookThisInspection(this)");

			let close = createElement('input', 'btn btn-danger', null, 'button');
			close.setAttribute('value', "Close");
			close.setAttribute('onclick', "closeThisInspection(this)");

			container.appendChild(dateArea);
			container.appendChild(appUserInput);
			container.appendChild(carInput);
			container.appendChild(booking);
			container.appendChild(close);

			bookingArea.appendChild(container);

			thisButton.style.display = "none"
		}

		function closeThisInspection(elem) {
			let container = elem.parentElement;
			let parentConatainer = container.parentElement;
			let booker = parentConatainer.nextElementSibling;
			booker.style.display = "block";
			parentConatainer.removeChild(container);
		}

		function bookThisInspection(elem) {
			const thisImage = elem;
			const thisImageParent = thisImage.parentElement;

			const parentsChild = thisImageParent.getElementsByClassName("bookable");


			var postBody = new FormData();
			//var postBody = {};

			for (let i = 0; i < parentsChild.length; i++) {

				postBody.append(parentsChild[i].name, parentsChild[i].value);
			}
			const verify = document.getElementsByName('__RequestVerificationToken')[0];
			postBody.append("__RequestVerificationToken", verify.value);
			$.ajax({
				type: 'POST',
				url: '@Url.Action("CreateSchedule", "CustomerSchedules")',
				data: postBody,
				contentType: false,
				processData: false,
				beforeSend: function () {
					thisImage.value += "  ...Loading";
				},
				success: function (result) {
					if (result.value != null) {
						thisImageParent.innerHTML = `<span class='btn btn-success'>${result.value}</span>`;
					}
					else {
						swal({
							icon: "error",
							title: "There was an error with your request. Please select a date and/or time",

						});
						closeThisInspection(elem);
					}

				},
				error: function (result) {
					swal({
						icon: "error",
						title: "Please login and try again",

					});
					closeThisInspection(elem) 
				}

			})
		}

		function cancelInspection(elem, id) {
			swal({
				title: "Canceling?",
				text: "Are you sure you want to cancel?",
				icon: "warning",
				buttons: true
			}).then((value) => {
				if (value != null) {
					let dummyElem = document.createElement('div');
					dummyElem.innerHTML = '@Html.AntiForgeryToken()';
					let token = dummyElem.firstChild.value;
					let data = new FormData();
					data.append('Id', id);
					data.append('__RequestVerificationToken', token);
					console.log(token)
					$.ajax({
						type: 'POST',
						url: '@Url.Action("CancelSchedule", "CustomerSchedules")',
						data: data,
						contentType: false,
						processData: false,
						success: function (result) {
							let thisInspection = elem.parentElement.parentElement;
							thisInspection.innerHTML = '<span class="btn btn-default">Inspection Canceled</span>';
							swal({
								text: result.value,
								icon: "success"
							})
						},
						error: function () {
							swal.stopLoading();
							swal.close();
						}

					});
				}

			});
		}
	</script>
}

	<div class="header">
		 <h3>Blog Site</h3> 
		 <h5> <span>N</span>119,999</h5>
		  </div> <div class="info-agile"> <p> 
			  <span>Free</span> Blog Site inclusive</p> 
			  <p> <span>25GB</span> 10 web pages </p>
			   <p> <span>5</span> A very friendly dashboard </p> 
			   <p> <span>10GB</span> Integration of online payment gateways  </p> 
			   <p> <span>5</span> Site-wide search </p>
			    <p class="text"><span>	24/7</span> Support </p>
				 </div>